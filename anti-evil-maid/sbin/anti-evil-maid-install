#!/bin/sh -e

. anti-evil-maid-boilerplate
LABEL_SUFFIX_CHARS=0-9a-zA-Z.-


usage() {
    cat <<END

Usage:
  anti-evil-maid-install [-s <suffix>] [-R] <device>


Arguments:
  -s: <device> gets labeled "$LABEL_PREFIX<suffix>". <suffix> can be empty,
      which is the default, or up to two characters long, composed of the
      following alphabet: $LABEL_SUFFIX_CHARS

      Each of your Anti Evil Maid devices must have a unique suffix.

  -R: Replace <device>'s data with a new ext4 filesystem!


Examples:
  Install on the internal boot partition (assuming that it is /dev/sda1),
  and label its current filesystem "anti-evil-maid":
    anti-evil-maid-install /dev/sda1

  Install on a SD card, replacing its data with a new ext4 filesystem,
  and label that new filesystem "anti-evil-maid2":
    anti-evil-maid-install -R -s 2 /dev/mmcblk0

END

    exit 1
}


# parse options

LABEL_SUFFIX=
alias replace=false
while getopts s:Rh opt; do
    case "$opt" in
        s) LABEL_SUFFIX=$OPTARG ;;
        R) alias replace=true ;;
        *) usage ;;
    esac
done

case "$LABEL_SUFFIX" in *[!$LABEL_SUFFIX_CHARS]*|???*) usage; esac
LABEL=$LABEL_PREFIX$LABEL_SUFFIX

shift $(($OPTIND - 1))
case $# in
    1) DEV=$1 ;;
    *) usage ;;
esac


if [ "$(id -ur)" != 0 ] ; then
    log "This command must be run as root!"
    exit 1
fi


if replace; then
    log "Creating new ext4 filesystem labeled $LABEL"
    mkfs.ext4 -F -L "$LABEL" "$DEV"
else
    fstype=$(blkid -s TYPE -o value "$DEV")
    if [ "$fstype" != ext4 ]; then
        log "unknown filesystem type: $fstype"
        exit 1
    fi

    log "Labeling filesystem $LABEL"
    e2label "$DEV" "$LABEL"
fi


log "Checking mount status"

MNT=/mnt/anti-evil-maid/$LABEL
if CUR_MNT=$(lsblk -dnr -o MOUNTPOINT "$DEV" 2>/dev/null) &&
   [ -n "$CUR_MNT" ]; then
    MNT=$CUR_MNT
else
    CUR_MNT=

    log "Mounting at $MNT"
    mkdir -p "$MNT"
    mount "$DEV" "$MNT"
fi


mkdir -p "$MNT/anti-evil-maid"
synctpms "$LABEL" "$MNT"
mkdir -p "$AEM_DIR/$LABEL"


if [ -z "$CUR_MNT" ]; then
    log "Unmounting $MNT"
    umount "$MNT"
fi


log "Done."
